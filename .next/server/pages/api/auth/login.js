"use strict";(()=>{var e={};e.id=908,e.ids=[908],e.modules={3524:e=>{e.exports=require("@prisma/client")},7096:e=>{e.exports=require("bcrypt")},9344:e=>{e.exports=require("jsonwebtoken")},145:e=>{e.exports=require("next/dist/compiled/next-server/pages-api.runtime.prod.js")},6249:(e,r)=>{Object.defineProperty(r,"l",{enumerable:!0,get:function(){return function e(r,t){return t in r?r[t]:"then"in r&&"function"==typeof r.then?r.then(r=>e(r,t)):"function"==typeof r&&"default"===t?r:void 0}}})},8686:(e,r,t)=>{t.r(r),t.d(r,{config:()=>f,default:()=>P,routeModule:()=>g});var n={};t.r(n),t.d(n,{default:()=>c});var i=t(1802),o=t(7153),s=t(6249),a=t(3524),u=t(7096),d=t.n(u),l=t(9344),p=t.n(l);let m=new a.PrismaClient;async function c(e,r){if("POST"!==e.method)return r.status(405).json({error:"Method not allowed"});let t="POST"===e.method?e.body.email:e.query.email,n="POST"===e.method?e.body.password:e.query.password;if(!t||!n)return r.status(400).json({error:"Email and password are required"});let i=process.env.JWT_SECRET;if(!i)return r.status(500).json({error:"JWT secret is not configured"});try{let t=await m.user.findUnique({where:{email:e.body.email}});if(!t||!t.password||!await d().compare(n,t.password))return r.status(401).json({error:"Invalid credentials"});let o=p().sign({id:t.id,email:t.email},i,{expiresIn:"1h"});r.status(200).json({message:"Login successful",token:o,user:{id:t.id,email:t.email,name:t.name}})}catch(e){console.error("Login error:",e),r.status(500).json({error:"Something went wrong"})}}let P=(0,s.l)(n,"default"),f=(0,s.l)(n,"config"),g=new i.PagesAPIRouteModule({definition:{kind:o.x.PAGES_API,page:"/api/auth/login",pathname:"/api/auth/login",bundlePath:"",filename:""},userland:n})},7153:(e,r)=>{var t;Object.defineProperty(r,"x",{enumerable:!0,get:function(){return t}}),function(e){e.PAGES="PAGES",e.PAGES_API="PAGES_API",e.APP_PAGE="APP_PAGE",e.APP_ROUTE="APP_ROUTE"}(t||(t={}))},1802:(e,r,t)=>{e.exports=t(145)}};var r=require("../../../webpack-api-runtime.js");r.C(e);var t=r(r.s=8686);module.exports=t})();